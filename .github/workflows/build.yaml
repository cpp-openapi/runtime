name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        OPENAPI_JSON: ["OPENAPI_NLOHMANNJSON", "OPENAPI_RAPIDJSON"]
    steps:
    - uses: actions/checkout@v2

    - name: Get specific version CMake, v3.21.2
      uses: lukka/get-cmake@v3.21.2
    
    - name: update pkg manager
      run: sudo apt-get update

    - name: Get boost
      run: sudo apt-get install libboost-all-dev

    # curl is built from source now. No need to have these libs
    # - name: Get curl etc
    #   run: sudo apt-get install libssl-dev libcurl4-openssl-dev
    
    - name: run cmake
      env:
        OPENAPI_JSON: ${{ matrix.OPENAPI_JSON }}
      run: mkdir build && cd build && cmake -DOPENAPI_JSON=${OPENAPI_JSON} ../

    - name: run build
      run: cd build && cmake --build .
    
    - name: run test
      run: cd build && ctest

    - name: get valgrind
      run: sudo apt-get install valgrind

    - name: check test memory corruption
      run: cd build && valgrind ./json/test/json_test

    - name: Save main exe
      uses: actions/upload-artifact@v2
      with:
        name: main-exe
        path: build/examples/cpp-openapi/main
        retention-days: 1
      

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      #- uses: actions/checkout@v2

      - name: download main executable
        uses: actions/download-artifact@master
        with:
          name: main-exe
          path: build/examples/cpp-openapi
      
      - name: make artifact executable
        run: sudo chmod +x ./build/examples/cpp-openapi/main

      # run go-swagger example server
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.2

      - name: Get go-swagger repo
        run: git clone --depth 1 https://github.com/go-swagger/go-swagger.git
    
      - name: build server
        run: cd go-swagger && go build -o ../server examples/auto-configure/cmd/a-to-do-list-application-server/main.go
      
      - name: run server
        run: ./server --port=12345 &

      - name: run main exe
        run: ./build/examples/cpp-openapi/main


  windows-build:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      
      - name: Get MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Get specific version CMake, v3.21.2
        uses: lukka/get-cmake@v3.21.2
      
      - name: Get Boost
        uses: MarkusJx/install-boost@v2.0.0
        id: install-boost
        with:
          # REQUIRED: Specify the required boost version
          # A list of supported versions can be found here: 
          # https://github.com/actions/boost-versions/blob/main/versions-manifest.json
          boost_version: 1.73.0

      - name: Configure CMake
        run: cmake . -DCMAKE_BUILD_TYPE=Debug -B build
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
      
      - name: run build
        run: cmake --build .\build

      - name: run test
        run:  cd build; ctest -C Debug;

      - name: Save main exe
        uses: actions/upload-artifact@v2
        with:
          name: main-exe
          path: build\examples\cpp-openapi\Debug\main.exe
          retention-days: 1

  windows-test:
    runs-on: windows-2019
    needs: windows-build
    steps:
      - name: download main executable
        uses: actions/download-artifact@master
        with:
          name: main-exe
          path: build\examples\cpp-openapi\Debug
      
      # - name: make artifact executable
      #   run: sudo chmod +x ./build/examples/cpp-openapi/main

      # run go-swagger example server
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.2

      - name: Get go-swagger repo
        run: git clone --depth 1 https://github.com/go-swagger/go-swagger.git
    
      - name: build server
        run: cd go-swagger; go build -o ..\server examples\auto-configure\cmd\a-to-do-list-application-server\main.go;
      
      - name: run server and client test
        run: |
            Start-Process -NoNewWindow -FilePath ".\server" -ArgumentList "--port 12345";
            Start-Sleep -s 10;
            .\build\examples\cpp-openapi\Debug\main.exe;